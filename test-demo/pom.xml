<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>test-demo</groupId>
  <artifactId>test-demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <name>test-demo</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.version>1.7</jdk.version>

		<junit.version>4.12</junit.version>
	
		<commons-lang3.version>3.3.2</commons-lang3.version>
		<log4j.version>1.2.27</log4j.version>
		<gson.version>2.3</gson.version>

		<servlet-api.version>6.0.37</servlet-api.version>
		<jsp-api.version>6.0.37</jsp-api.version>

		<!-- <httpclient.version>4.3.4</httpclient.version> -->
		<httpclient.version>4.5.2</httpclient.version>
		<httpasyncclient.version>4.1.2</httpasyncclient.version>

		<htmlparser.version>1.6</htmlparser.version>

		<!-- frameworks -->
		<org.springframework.version>4.3.9.RELEASE</org.springframework.version>

		<javassist.version>3.12.1.GA</javassist.version>
		<dubbo.version>2.8.4</dubbo.version>
		<netty.version>3.2.5.Final</netty.version>

		<jedis.version>2.4.2</jedis.version>
		<zookeeper.version>3.4.6</zookeeper.version>
		<zkclient.version>0.4</zkclient.version>
		<mongo.spring.version>1.10.4.RELEASE</mongo.spring.version>
		<mongo.java.driver.version>3.4.2</mongo.java.driver.version>

		<protobuf.version>3.16.3</protobuf.version>
		<protobuf.java.format.version>1.2</protobuf.java.format.version>
		<kafka.version>0.8.0</kafka.version>
		
		<fastjson.version>1.1.41</fastjson.version>
		
		 <!--  MyBatis Generator  -->
	    <basedir>D:/workspace/test-demo</basedir>
	    <targetJavaProject>${basedir}/src/main/java</targetJavaProject>
	    <targetModelPackage>com.test.dispatcher.entity</targetModelPackage>
	    <targetDaoPackage>com.test.dispatcher.map</targetDaoPackage>
	    <!--  XML生成路径  -->
	    <targetResourcesProject>${basedir}/src/main/resources</targetResourcesProject>
	    <targetXMLPackage>mapper</targetXMLPackage>
	    <!--  依赖版本  -->
	    <mapper.version>1.0.0</mapper.version>
	    <mysql.version>5.1.29</mysql.version>
	    
	    <mybatis.version>3.2.2</mybatis.version>
		<mybatis.spring.version>1.2.0</mybatis.spring.version>
		
	</properties>
	
	<!-- 设定主仓库，按设定顺序进行查找。 -->
	<repositories>
		<!-- 如有Nexus私服, 取消注释并指向正确的服务器地址. -->
		<repository>
			<id>nexus-repos</id>
			<name>Team Nexus Repository</name>
			<url>http://192.168.0.1:8080/nexus/content/groups/public</url>
		</repository>

		<repository>
			<id>nexus-repos-thirdparty</id>
			<name>Team Nexus Repository thirdparty</name>
			<url>http://192.168.0.1:8080/nexus/content/repositories/thirdparty</url>
		</repository>

	</repositories>
	
	<!-- 将当前项目打包的jar上传私服，则要在需要上传的工程中的pom.xml文件添加 -->
	<distributionManagement>
		<repository>
			<id>release</id>
			<name>Release Repository</name>
			<url>http://192.168.0.1:8080/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>snapshot</id>
			<name>Snapshot Repository</name>
			<url>http://192.168.0.1:8080/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	
	<dependencies>
		<!-- Test Dependency Begin -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Test Dependency End -->
		
		<!-- Common Dependency Begin -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${gson.version}</version>
			</dependency>

			<dependency>
				<groupId>javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist.version}</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>dubbo</artifactId>
				<version>${dubbo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.netty</groupId>
				<artifactId>netty</artifactId>
				<version>${netty.version}</version>
			</dependency>
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>${jedis.version}</version>
			</dependency>

			<!-- Common Dependency End -->

			<!-- Zookeeper 用于分布式服务管理 -->
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper.version}</version>
			</dependency>
			<dependency>
				<groupId>com.101tec</groupId>
				<artifactId>zkclient</artifactId>
				<version>${zkclient.version}</version>
			</dependency>
			<!-- Zookeeper 用于分布式服务管理 end -->

			<!-- Spring Dependency Begin -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${org.springframework.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<!-- Spring Dependency End -->

			<!-- MongoDB Dependency Begin -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-mongodb</artifactId>
				<version>${mongo.spring.version}</version>
			</dependency>
			<!-- MongoDB Dependency End -->

			<!-- MongoDB Driver Begin -->
			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>${mongo.java.driver.version}</version>
			</dependency>
			<!-- MongoDB Driver End -->

			<!-- Others Begin -->
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp-api.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpasyncclient</artifactId>
				<version>${httpasyncclient.version}</version>
			</dependency>
			<!-- Others End -->

			<dependency>
				<groupId>org.htmlparser</groupId>
				<artifactId>htmlparser</artifactId>
				<version>${htmlparser.version}</version>
			</dependency>

			<!-- google.protobuf -->
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protobuf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.googlecode.protobuf-java-format</groupId>
				<artifactId>protobuf-java-format</artifactId>
				<version>${protobuf.java.format.version}</version>
			</dependency>

			<!-- kafka -->
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka_2.8.2</artifactId>
				<version>${kafka.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-simple</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>

		<!-- elasticsearch 2.1.0 -->
		<!-- <dependency> <groupId>org.elasticsearch</groupId> <artifactId>elasticsearch</artifactId> 
			<version>2.1.0</version> </dependency> -->
		<!-- elasticsearch start 5.5.0 -->
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>transport</artifactId>
			<version>5.5.0</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>2.8.2</version>
		</dependency>
		<!-- elasticsearch end 5.5.0 -->
		
		<!-- MyBatis Dependency Begin -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis.spring.version}</version>
			</dependency>
			<!-- MyBatis Dependency End -->
			
			<!-- Mysql Driver Begin -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<!-- Mysql Driver End -->
			
			<!-- json path begin -->
			<dependency>
			    <groupId>com.jayway.jsonpath</groupId>
			    <artifactId>json-path</artifactId>
			    <version>2.2.0</version>
			</dependency>
			<!-- json path end -->
			
			<!-- pinyin4j begin -->
			<dependency>
			    <groupId>com.belerweb</groupId>
			    <artifactId>pinyin4j</artifactId>
			    <version>2.5.0</version>
			</dependency>
			<!--pinyin4j begin -->
		
	</dependencies>
	
	<!-- 开发、测试、生产profiles配置 -->
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<env>dev</env>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<env>test</env>
			</properties>
		</profile>
		<profile>
			<id>product</id>
			<properties>
				<env>product</env>
			</properties>
		</profile>
	</profiles>

	<build>
		<resources>
			<resource>
				<targetPath>${project.build.directory}/classes</targetPath>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
					<include>**/*.txt</include>
				</includes>
			</resource>

			<!-- 结合com.alibaba.dubbo.container.Main -->
			<resource>
				<targetPath>${project.build.directory}/classes/META-INF/spring</targetPath>
				<directory>src/main/resources/spring</directory>
				<filtering>true</filtering>
				<includes>
					<include>spring-context.xml</include>
				</includes>
			</resource>

		</resources>

		<pluginManagement>
			<plugins>
				<!-- 解决Maven插件在Eclipse内执行了一系列的生命周期引起冲突 -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		
		
		<filters>
			<filter>src/main/filters/${env}.properties</filter>
		</filters>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<uniqueVersion>false</uniqueVersion>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
			</plugin>

			<!-- Compiler 插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			
			<!-- MyBatis Generator 工具插件 -->
  		<plugin>
  			<groupId>org.mybatis.generator</groupId>
  			<artifactId>mybatis-generator-maven-plugin</artifactId>
  			<version>1.3.2</version>
  			<configuration>
  				<configurationFile>${basedir}/src/main/resources/generatorConfig.xml</configurationFile>
  				<overwrite>true</overwrite>
  				<verbose>true</verbose>
  			</configuration>
  			<dependencies>
		        <dependency>
		        <groupId>mysql</groupId>
		        <artifactId>mysql-connector-java</artifactId>
		        <version>${mysql.version}</version>
		        </dependency>
		        <dependency>
		        <groupId>com.github.abel533</groupId>
		        <artifactId>mapper</artifactId>
		        <version>${mapper.version}</version>
		        </dependency>
		    </dependencies>
  		</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<charset>${project.build.sourceEncoding}</charset>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<nonFilteredFileExtension>jks</nonFilteredFileExtension>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<finalName>test-demo</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptor>src/main/assemble/dependency.xml</descriptor>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
	</build>
  
</project>
